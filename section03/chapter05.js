// 원시타입 객체타입 두 가지 타입은 값이 저장되거나 복사되는 과정이 다름
// 원시타입 : 값 자체로서 변수에 저장되고 복사 <-> 객체타입 : 참조값(주소값)을 통해 변수에 저장되고 복사

// 원시타입= 불변값 : 실제 메모리 공간에 저장된 원본 데이터 값은 수정되지 않음
// 변수를 선언 및 초기화 후 변수의 값을 변경할 경우 메모리에 저장된 값은 수정되지 않고 새로운 공간에 추가적으로 저장하고 가리키게 함

// 객체타입= 가변값 : 메모리상에서 값이 수정되어버림
// 메모리에 별도로 값을 저장하고 그 저장 공간을 가리키는 주소값을 저장, 원시타입과 다르게 여러개를 저장하고 수가 유연하게 변함, 복사할 경우 같은 참조값을 가리킴

// 객체타입 주의사항
/*  1. 의도치않게 값이 수정될 수 있음 -> 사이드 이펙트 방지를 위해 ...(Spread 연산자로 복사)
        참조값을 그대로 복사하는 것=쉘로우 카피 <-> 새로운 객체를 생성하여 프로퍼티만 복사=딥 카피
    2. 객체간의 비교는 참조값을 기본으로 비교
        참조값이 아닌 프로퍼티를 기준으로 비교하고 싶다면 JSON.stringify(객체->문자열 내장함수)
    3. 배열과 함수도 객체 -> 프로퍼티와 메소드를 가질 수 있음

*/